#!/bin/bash
#
# An example hook script for the "post-receive" event.
#
# The "post-receive" script is run after receive-pack has accepted a pack
# and the repository has been updated.  It is passed arguments in through
# stdin in the form
#  <oldrev> <newrev> <refname>
# For example:
#  aa453216d1b3e49e7f6f98441fa56946ddcd6a20 68f7abf4e6f922807889f52bc043ecd31b79f814 refs/heads/master
#
# see contrib/hooks/ for a sample, or uncomment the next line and
# rename the file to "post-receive".

#. /usr/share/git-core/contrib/hooks/post-receive-email

read oldrev newrev refname
timestamp=`date +%FT%H%M`
logfile=/opt/blogbuild/build-$timestamp.log

echo "$timestamp $oldrev $newrev $refname" >> /opt/blogbuild/debug.log

publish=0
instancename="unknown"
if [ "$refname" = "refs/heads/master" ]; then
    branchname="master"
    instancename="dev"
    publishhostname="vb-app-c.scottlogic.co.uk"
    publish=1
elif [ "$refname" = "refs/heads/content" ]; then
    branchname="content"
    instancename="content"
    publishhostname="vb-app-b.visiblox.com"
    publish=1
elif [ "$refname" = "refs/heads/live" ]; then
    branchname="live"
    instancename="live"
    publishhostname="vb-app-a.visiblox.com"
    publish=1
fi

echo "$newrev $instancename" >> /opt/blogbuild/last-received

if [[ publish -eq 1 ]]; then

    /bin/mkdir /opt/blogbuild/scottlogic-website-blog-$instancename-$timestamp
    /usr/bin/git archive --format=tar --remote=/opt/gerrit/git/scottlogic-website-blogs.git $branchname | /bin/tar -x -C /opt/blogbuild/scottlogic-website-blog-$instancename-$timestamp
    cd /opt/blogbuild/scottlogic-website-blog-$instancename-$timestamp

    echo "[INFO] $timestamp" > $logfile
    #echo "" >> $logfile
    #/usr/bin/git log -n 1 >> $logfile 2>&1
    echo "" >> $logfile
    echo "[INFO] Building for $newrev $instancename" >> $logfile
    echo "" >> $logfile
    /usr/bin/jekyll build --config _config.yml,_$branchname.yml >> $logfile
    rc=$?
    echo "" >> $logfile

    if [[ $rc -eq 0 ]]; then
        echo "[INFO] Jekyll build ok" >> $logfile
        /usr/bin/rsync --rsh='ssh -p2202' -az --delete \
            /opt/blogbuild/scottlogic-website-blog-$instancename-$timestamp/_site-safe/ \
            continuum@$publishhostname:/cygdrive/c/inetpub/wwwroot-scottweb-blog/incoming \
            >> $logfile 2>&1 \
        && /usr/bin/ssh -p2202 continuum@$publishhostname " \
               echo \"[INFO] Previous version was \`cat /cygdrive/c/inetpub/wwwroot-scottweb-blog/current.txt\`\" \
            && echo \"[INFO] New version is $timestamp\" \
            && echo \"[INFO] Copying incoming to backups/$timestamp\" \
            && /bin/rsync -az --delete /cygdrive/c/inetpub/wwwroot-scottweb-blog/incoming/ /cygdrive/c/inetpub/wwwroot-scottweb-blog/backups/$timestamp \
            && echo \"[INFO] Syncing incoming to current\" \
            && /bin/rsync -az --delete /cygdrive/c/inetpub/wwwroot-scottweb-blog/incoming/ /cygdrive/c/inetpub/wwwroot-scottweb-blog/current \
            && echo -n \"Current is $timestamp\" > /cygdrive/c/inetpub/wwwroot-scottweb-blog/current.txt" \
            >> $logfile 2>&1
        rcrs=$?
        if [[ $rcrs -eq 0 ]]; then
            echo "[INFO] rsync ok" >> $logfile
            echo "$newrev $instancename" >> /opt/blogbuild/last-received-successful
            buildresult="SUCCESS"
        else
            echo "[ERROR] rsync error" >> $logfile
            buildresult="ERROR - rsync error"
        fi
    else
        echo "[ERROR] jekyll build error" >> $logfile
        buildresult="ERROR - jekyll error"
    fi

    echo "[INFO] Finished: $buildresult" >> $logfile

    /bin/mail -s "Website $instancename Blog Build - $buildresult" bloggers@scottlogic.co.uk < $logfile > /dev/null 2>&1
    rm -Rf /opt/blogbuild/scottlogic-website-blog-$instancename-$timestamp

fi

exit
